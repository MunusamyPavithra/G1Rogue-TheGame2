name: Java CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Change to 'windows-latest' if you want to run on a Windows runner.

    strategy:
      matrix:
        java: [17, 11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Debug: List files in the root directory
      run: |
        ls -alh  # List files in the root directory to check if gradlew exists

    - name: Ensure gradlew is executable
      run: |
        if [ -f "./gradlew" ]; then
          chmod +x gradlew
        else
          echo "gradlew not found in the current directory."
          exit 1
        fi

    - name: Build with Gradle
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          ./gradlew.bat build --no-daemon
        else
          ./gradlew build --no-daemon
        fi

    - name: Run tests
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          ./gradlew.bat test --no-daemon
        else
          ./gradlew test --no-daemon
        fi
